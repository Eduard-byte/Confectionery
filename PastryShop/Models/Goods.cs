//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PastryShop.Models
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    public partial class Goods
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Goods()
        {
            this.Sales = new HashSet<Sales>();
            this.Product = new HashSet<Product>();
        }
    
        public int Id { get; set; }
        public string GoodsName { get; set; }
        public System.TimeSpan CookingTime { get; set; }
        public decimal Price { get; set; }
        public string Photo { get; set; }
        public int Id_category { get; set; }
        public int Id_employee { get; set; }
        public Nullable<bool> Actual { get; set; }
    
        public virtual Category Category { get; set; }
        public virtual Employee Employee { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Sales> Sales { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Product> Product { get; set; }

        /// <summary>
        /// Возвращает абсолютный путь к изображению
        /// </summary>
        public string GetPhoto
        {
            get
            {
                if (Photo is null)
                    return null;
                return Directory.GetCurrentDirectory() + @"\Images\" + Photo.Trim();
            }
        }
        /// <summary>
        /// Задает цвет фона товара
        /// </summary>
        public string GetColor
        {
            get
            {
                if ((bool)Actual)
                    return "#fff";
                else
                    return "#FFE0E0";
            }
        }
        /// <summary>
        /// Текстовое представление активности товара
        /// </summary>
        public string GetStatus
        {
            get
            {
                if ((bool)Actual)
                    return "";
                else
                    return "нет в наличии";
            }
        }
    }
}
